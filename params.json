{"name":"Stove","tagline":"A utility for packaging and releasing Chef cookbooks","body":"Stove\r\n=====\r\n[![Gem Version](https://badge.fury.io/rb/stove.png)](http://badge.fury.io/rb/stove)\r\n[![Build Status](https://travis-ci.org/sethvargo/stove.png?branch=master)](https://travis-ci.org/sethvargo/stove)\r\n[![Dependency Status](https://gemnasium.com/sethvargo/stove.png)](https://gemnasium.com/sethvargo/stove)\r\n[![Code Climate](https://codeclimate.com/github/sethvargo/stove.png)](https://codeclimate.com/github/sethvargo/stove)\r\n\r\nA utility for releasing and managing Chef Cookbooks. It will:\r\n\r\n- Edit the `metadata.rb` and insert the proper version\r\n- Create a CHANGELOG from JIRA tickets\r\n- Commit and push these changes to git\r\n- Create a git tag and push those changes to git\r\n- Publish a release to GitHub releases\r\n- Upload the cookbook to the Opscode Community Site\r\n- Resolve (close) the JIRA tickets\r\n\r\n\r\nWhy?\r\n----\r\nExisting tools to package cookbooks (such as [Knife Community](https://github.com/miketheman/knife-community) and `knife cookbook site share`) require a dependency on Chef. Because of thier dependency on Chef, they enforce the use of a \"cookbook repo\". Especially with the evolution of [Berkshelf](https://github.com/RiotGames/berkshelf), cookbooks are individualized artifacts and are often contained in their own repositories. [stove](https://github.com/sethvargo/stove) is **cookbook-centric, rather than Chef-centric**. Since all commands are run from inside the cookbook, it's safe to include stove in your cookbooks `Gemfile`.\r\n\r\n\r\nInstallation\r\n------------\r\nIt is highly recommended that you include `stove` in your cookbook's Gemfile:\r\n\r\n```ruby\r\ngem 'stove'\r\n```\r\n\r\nAlternatively, you may install it as a gem:\r\n\r\n    $ gem install stove\r\n\r\nThe use of some plugins (such as GitHub and JIRA) require a Stove configuration file. The Stove config is a JSON file stored at `~/.stove` on your local hard drive. The schema looks like this:\r\n\r\n```javascript\r\n{\r\n  \"field\": {\r\n    \"option\": \"value\"\r\n  }\r\n}\r\n```\r\n\r\nFor example, my local Stove configuration looks like this:\r\n\r\n```javascript\r\n{\r\n  \"community\": {\r\n    \"username\": \"sethvargo\",\r\n    \"key\": \"~/.chef/sethvargo.pem\"\r\n  },\r\n  \"github\": {\r\n    \"access_token\": \"...\"\r\n  },\r\n  \"jira\": {\r\n    \"username\": \"sethvargo\",\r\n    \"password\": \"...\"\r\n  }\r\n}\r\n```\r\n\r\nIf you are using Stove 1.0, you need to update your configuration file syntax.\r\n\r\n**It is recommended that the permissions on this file be 0600 to prevent unauthorized reading!**\r\n\r\n\r\nUsage\r\n-----\r\nThe gem is packaged as a binary. It should be run from _inside the cookbook to release_:\r\n\r\n    (~/cookbooks/bacon) $ bake 1.2.3\r\n\r\nYou can always use the `--help` flag to get information:\r\n\r\n```text\r\nUsage: bake x.y.z\r\n\r\nActions:\r\n        --no-bump                    Perform a version bump the local version automatically\r\n        --no-changelog               Generate and prompt for a CHANGELOG\r\n        --no-dev                     Bump a minor version release for development purposes\r\n        --no-upload                  Upload the cookbook to the community site\r\n\r\nPlugins:\r\n        --no-git                     Tag and push to a git remote\r\n        --no-github                  Publish the release to GitHub\r\n        --no-jira                    Resolve JIRA issues\r\n\r\nGlobal Options:\r\n        --locale [LANGUAGE]          Change the language to output messages\r\n        --log-level [LEVEL]          Set the log verbosity\r\n        --category [CATEGORY]        Set category for the cookbook\r\n        --path [PATH]                Change the path to a cookbook\r\n        --remote [REMOTE]            The name of the git remote to push to\r\n        --branch [BRANCH]            The name of the git branch to push to\r\n    -h, --help                       Show this message\r\n    -v, --version                    Show version\r\n```\r\n\r\n\r\nRake Task\r\n---------\r\nStove also includes a Rake task you can include in your Rakefile:\r\n\r\n```ruby\r\nrequire 'stove/rake_task'\r\n\r\nStove::RakeTask.new do |stove|\r\n  stove.git = true\r\n  stove.devodd = true\r\nend\r\n```\r\n\r\n\r\nContributing\r\n------------\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\nTODO:\r\n- Secure the authentication file\r\n\r\n\r\nSee Also\r\n--------\r\n- [Knife Community](https://github.com/miketheman/knife-community)\r\n- [Emeril](https://github.com/fnichol/emeril)\r\n\r\n\r\nLicense & Authors\r\n-----------------\r\n- Author: Seth Vargo (sethvargo@gmail.com)\r\n\r\n```text\r\nCopyright 2013 Seth Vargo <sethvargo@gmail.com>\r\nCopyright 2013 Opscode, Inc\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n```\r\n","google":"UA-12012976-11","note":"Don't delete this file! It's used internally to help with page regeneration."}